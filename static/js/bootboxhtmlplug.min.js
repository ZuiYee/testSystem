(function(n, t) {
    "use strict";
    typeof define == "function" && define.amd ? define(["jquery"], t) : typeof exports == "object" ? module.exports = t(require("jquery")) : n.bootbox = t(n.jQuery)
})(this,
function init(n, t) {
    "use strict";
    function v(n) {
        var t = s[e.locale];
        return t ? t[n] : s.en[n]
    }
    function o(t, i, r, u) {
        var f, e, o;
        t.stopPropagation();
        t.preventDefault();
        f = n.extend({},
        this, {
            options: r,
            api: window.api,
            content: self || window,
            dialog: i,
            document: i.find(".bootbox-body"),
            close: function() {
                i.modal("hide")
            },
            reload: function() {
                var t;
                if (n.trim(r.href).length > 0) {
                    var u = i.find(".modal-body"),
                    f = i.find(".modal-dialog");
                    u.find(".bootbox-body").empty().html('<h3 class="header smaller lighter grey loading-spinner align-center"  style="min-height: 100px !important;"><i class="icon-spinner icon-spin orange bigger-160"><\/i><span>&nbsp;&nbsp;椤甸潰姝ｅ湪鍔犺浇涓�...<\/span><\/h3>');
                    r.href = r.href.indexOf("?") > -1 ? r.href + "&time=" + (new Date).getTime() : r.href + "?time=" + (new Date).getTime();
                    window.api = {
                        data: r.data || {},
                        opener: r.opener,
                        document: i.find(".bootbox-body")
                    };
                    t = n.extend(!0, {},
                    r.data || {});
                    delete t.colModel;
                    window.setTimeout(function() {
                        n.ajaxSetup({
                            async: !0
                        });
                        u.find(".bootbox-body").empty().load(r.href, t,
                        function() {
                            r.isLoaded = !0;
                            i.triggerHandler("loaded.bs.modal")
                        });
                        n.ajaxSetup({
                            async: !1
                        })
                    },
                    200)
                }
            },
            button: function(t) {
                if (t && t.id) {
                    var r = n.extend(!0, {},
                    t);
                    delete r.id;
                    i.find(".modal-footer").find("button[data-bb-handler='" + t.id + "']").prop(r)
                }
            }
        });
        r.btnlock ? (e = n(t.target), n.when(n.Deferred(function(r) {
            e.button("loading");
            var o = n.isFunction(u) && u.call(n.extend(f, {
                reset: function() {
                    r.resolve()
                }
            }), t) === !1;
            o || i.modal("hide")
        }).promise()).always(function() {
            e.button("reset")
        })) : (o = n.isFunction(u) && u.call(n.extend(f, {
            reset: function() {}
        }), t) === !1, o || i.modal("hide"))
    }
    function y(n) {
        var i, t = 0;
        for (i in n) t++;
        return t
    }
    function u(t, i) {
        var r = 0;
        n.each(t,
        function(n, t) {
            i(n, t, r++)
        })
    }
    function p(t) {
        var i, r;
        if (typeof t != "object") throw new Error("Please supply an object of options");
        if (!t.href && !t.message) throw new Error("Please specify a href or message");
        return t = n.extend({},
        e, t),
        t.buttons || (t.buttons = {}),
        t.backdrop = t.backdrop ? "static": !1,
        i = t.buttons,
        r = y(i),
        u(i,
        function(t, u, f) {
            if (n.isFunction(u) && (u = i[t] = {
                callback: u
            }), n.type(u) !== "object") throw new Error("button with key " + t + " must be an object");
            u.label || (u.label = t);
            u.className || (u.className = r <= 2 && f === r - 1 ? "btn-default": "btn-primary")
        }),
        t
    }
    function w(n, t) {
        var r = n.length,
        i = {};
        if (r < 1 || r > 4) throw new Error("Invalid argument length");
        return r === 3 || typeof n[0] == "string" ? (i[t[0]] = n[0], i[t[1]] = n[1], i[t[2]] = n[2]) : r === 2 || typeof n[0] == "string" ? (i[t[0]] = n[0], i[t[1]] = n[1]) : i = n[0],
        i
    }
    function h(t, i, r) {
        return n.extend(!0, {},
        t, w(i, r))
    }
    function c(n, t, i, r) {
        var u = {
            className: "bootbox-" + n,
            buttons: l.apply(null, t)
        };
        return a(h(u, r, i), t)
    }
    function l() {
        for (var t = {},
        n = 0,
        r = arguments.length; n < r; n++) {
            var i = arguments[n],
            u = i.toLowerCase(),
            f = i.toUpperCase();
            t[u] = {
                label: v(f)
            }
        }
        return t
    }
    function a(n, i) {
        var r = {};
        return u(i,
        function(n, t) {
            r[t] = !0
        }),
        u(n.buttons,
        function(n) {
            if (r[n] === t) throw new Error("button key " + n + " is not allowed (options are " + i.join("\n") + ")");
        }),
        n
    }
    var r = {
        dialog: "<div class='bootbox modal sl_mod' tabindex='-1' role='dialog' aria-labelledby='myModalLabel' aria-hidden='true'><div class='modal-dialog'><div class='modal-content'><div class='modal-body'><div class='bootbox-body'><\/div><\/div><\/div><\/div><\/div>",
        header: "<div class='modal-header'><h4 class='modal-title'><\/h4><\/div>",
        progress: "<div class='modal-progress'><div class='progress' ><div class='progress-bar progress-bar-info progress-bar-striped active' role='progressbar' aria-valuenow='0' aria-valuemin='0' aria-valuemax='100'  style='width: 0%;'>0%<\/div><\/div><\/div>",
        footer: "<div class='modal-footer'><\/div>",
        fixed: "<div class='modal-fixed'><\/div>",
        fullScreen: "<div class='bootbox-full'><span class='fa fa-square'><\/span><\/div>",
        closeButton: '<input type="hidden" name="focusInput"/><button type="button" class="bootbox-close-button btn-sm close bootbox-close" data-dismiss="modal"><span aria-hidden="true">&times;<\/span><span class="sr-only">Close<\/span><\/button>',
        form: "<form class='bootbox-form'><\/form>",
        inputs: {
            text: "<input class='bootbox-input bootbox-input-text form-control' autocomplete=off type=text />",
            textarea: "<textarea class='bootbox-input bootbox-input-textarea form-control'><\/textarea>",
            email: "<input class='bootbox-input bootbox-input-email form-control' autocomplete='off' type='email' />",
            select: "<select class='bootbox-input bootbox-input-select form-control'><\/select>",
            checkbox: "<div class='checkbox'><label><input class='bootbox-input bootbox-input-checkbox' type='checkbox' /><\/label><\/div>",
            date: "<input class='bootbox-input bootbox-input-date form-control' autocomplete=off type='date' />",
            time: "<input class='bootbox-input bootbox-input-time form-control' autocomplete=off type='time' />",
            number: "<input class='bootbox-input bootbox-input-number form-control' autocomplete=off type='number' />",
            password: "<input class='bootbox-input bootbox-input-password form-control' autocomplete='off' type='password' />"
        }
    },
    e = {
        locale: "en",
        backdrop: !0,
        animate: !0,
        className: null,
        closeButton: !0,
        show: !0,
        fullScreen: !0,
        progress: !1,
        progressID: "bootboxStatus",
        btnlock: !1,
        draggable: !1,
        container: "body",
        width: "800px",
        height: t,
        max_height: t,
        fixedTarget: null,
        offAtOnce: !1,
        offsetHeight: 200,
        offsetWidth: 20,
        beforeRender: n.noop,
        afterRender: n.noop
    },
    i = {},
    f,
    s;
    return i.alert = function() {
        var t;
        if (t = c("alert", ["ok"], ["title", "message", "callback"], arguments), t.draggable = !0, t.fullScreen = !1, arguments.length == 4 && n.extend(t, arguments[3]), t.callback && !n.isFunction(t.callback)) throw new Error("alert requires callback property to be a function when provided");
        return t.buttons.ok.callback = t.onEscape = t.onClose = function() {
            return n.isFunction(t.callback) ? t.callback.call(this) : !0
        },
        t.isLoaded = !1,
        i.dialog(t)
    },
    i.confirm = function() {
        var t;
        if (t = c("confirm", ["confirm", "cancel"], ["title", "message", "callback"], arguments), t.draggable = !0, t.fullScreen = !1, arguments.length == 4 && n.extend(!0, t, arguments[3]), t.buttons.cancel.callback = t.onEscape = t.onClose = function() {
            return t.callback.call(this, !1)
        },
        t.buttons.confirm.callback = function() {
            return t.callback.call(this, !0)
        },
        !n.isFunction(t.callback)) throw new Error("confirm requires a callback");
        return t.isLoaded = !1,
        i.dialog(t)
    },
    i.prompt = function() {
        var f, p, s, v, e, w, o, b, y, c, k;
        if (v = n(r.form), p = {
            className: "bootbox-prompt",
            buttons: l("confirm", "cancel"),
            value: "",
            inputType: "text"
        },
        f = a(h(p, arguments, ["title", "callback"]), ["confirm", "cancel"]), f.draggable = !0, f.fullScreen = !1, arguments.length == 3 && n.extend(!0, f, arguments[2]), w = f.show === t ? !0 : f.show, b = ["date", "time", "number"], y = document.createElement("input"), y.setAttribute("type", f.inputType), b[f.inputType] && (f.inputType = y.type), f.message = v, f.buttons.cancel.callback = f.onEscape = f.onClose = function() {
            return f.callback.call(this, null)
        },
        f.buttons.confirm.callback = function() {
            var t, i;
            switch (f.inputType) {
            case "text":
            case "textarea":
            case "email":
            case "select":
            case "date":
            case "time":
            case "number":
            case "password":
                t = e.val();
                break;
            case "checkbox":
                i = e.find("input:checked");
                t = [];
                u(i,
                function(i, r) {
                    t.push(n(r).val())
                })
            }
            return f.callback.call(this, t)
        },
        f.show = !1, !f.title) throw new Error("prompt requires a title");
        if (!n.isFunction(f.callback)) throw new Error("prompt requires a callback");
        if (!r.inputs[f.inputType]) throw new Error("invalid prompt type");
        e = n(r.inputs[f.inputType]);
        switch (f.inputType) {
        case "text":
        case "textarea":
        case "email":
        case "date":
        case "time":
        case "number":
        case "password":
            e.val(f.value);
            break;
        case "select":
            if (c = {},
            o = f.inputOptions || [], !o.length) throw new Error("prompt with select requires options");
            u(o,
            function(i, r) {
                var u = e;
                if (r.value === t || r.text === t) throw new Error("given options in wrong format");
                r.group && (c[r.group] || (c[r.group] = n("<optgroup/>").attr("label", r.group)), u = c[r.group]);
                u.append("<option value='" + r.value + "'>" + r.text + "<\/option>")
            });
            u(c,
            function(n, t) {
                e.append(t)
            });
            e.val(f.value);
            break;
        case "checkbox":
            if (k = n.isArray(f.value) ? f.value: [f.value], o = f.inputOptions || [], !o.length) throw new Error("prompt with checkbox requires options");
            if (!o[0].value || !o[0].text) throw new Error("given options in wrong format");
            e = n("<div/>");
            u(o,
            function(t, i) {
                var o = n(r.inputs[f.inputType]);
                o.find("input").attr("value", i.value);
                o.find("label").append(i.text);
                u(k,
                function(n, t) {
                    t === i.value && o.find("input").prop("checked", !0)
                });
                e.append(o)
            })
        }
        f.placeholder && e.attr("placeholder", f.placeholder);
        f.pattern && e.attr("pattern", f.pattern);
        v.append(e);
        v.on("submit",
        function(n) {
            n.preventDefault();
            s.find(".btn-primary").click()
        });
        f.isLoaded = !1;
        s = i.dialog(f);
        s.off("shown.bs.modal");
        s.on("shown.bs.modal",
        function() {
            e.focus()
        });
        return w === !0 && s.modal("show"),
        s
    },
    i.loadBody = function(t, i, r) {
        var u, e, f;
        t && i && n.trim(i.href).length > 0 && (u = n(t).find(".modal-body"), u.size() > 0 && (e = '<h3 class="header smaller lighter grey loading-spinner align-center"  style="min-height: 100px !important;"><i class="icon-spinner icon-spin orange bigger-160"><\/i><span>&nbsp;&nbsp;椤甸潰姝ｅ湪鍔犺浇涓�...<\/span><\/h3>', u.find(".bootbox-body").html(e), i.href = i.href.indexOf("?") > -1 ? i.href + "&time=" + (new Date).getTime() : i.href + "?time=" + (new Date).getTime(), window.api = {
            data: i.data || {},
            opener: n("div.bootbox").size() > 0 ? n("div.bootbox").last() : document.body,
            document: t.find(".bootbox-body")
        },
        f = n.extend(!0, {},
        i.data || {}), delete f.colModel, n.ajaxSetup({
            async: !1
        }), u.find(".bootbox-body").load(i.href, f,
        function() {
            i.isLoaded = !0;
            r.resolve()
        }), n.ajaxSetup({
            async: !0
        })))
    },
    i.dialog = function(t) {
        function a() {
            return t.className == "bootbox-alert" || t.className == "bootbox-confirm" || t.className == "bootbox-prompt"
        }
        function g() {
            var i = n(window).width(),
            r = n.isFunction(t.width) ? t.width.call(this) : t.width,
            u;
            return r && /.*%$/.test(r) ? {
                windowWidth: i,
                realWidth: i * parseFloat(r) / 100
            }: (r = parseInt(r), a()) ? {
                windowWidth: i,
                realWidth: r
            }: (u = Math.max(Math.min(r, i), 0), r >= i ? u = i - t.offsetWidth * 2 : i <= 768 ? u = i - t.offsetWidth * 2 : r >= 300 ? u = r: i > 1280 ? u = i - t.offsetWidth * 4 : i > 768 && i <= 1280 && (u = i - t.offsetWidth * 2), u = Math.max(u, 300), {
                windowWidth: i,
                realWidth: u
            })
        }
        function nt() {
            h = f.find(".modal-body");
            s = f.find(".modal-dialog");
            v = f.find(".modal-header");
            ft = f.find(".bootbox-body");
            y = f.find(".modal-footer");
            var l = n(window).width(),
            r = n(window).height(),
            u = n.fn.actual ? n("#navbar_container").actual("outerHeight") : n("#navbar_container").outerHeight(!0),
            e = Math.abs(r - u),
            i = (n.fn.actual ? s.actual("outerHeight") : s.outerHeight(!0)) || s.height(),
            o = (n.fn.actual ? v.actual("outerHeight") : v.outerHeight(!0)) || v.height(),
            c = (n.fn.actual ? y.actual("outerHeight") : y.outerHeight(!0)) || y.height(),
            p = i - o - c,
            w = Math.abs(Math.abs(e - t.offsetHeight) - o - c);
            return {
                windowWidth: l,
                windowHeight: r,
                navbarHeight: u,
                containerHeight: e,
                dialogHeight: i,
                headerHeight: o,
                contentHeight: p,
                footerHeight: c,
                maxHeight: w,
                top: function() {
                    return a() ? (r - i) / 2 : (e - i) / 2 + u
                }.call(this)
            }
        }
        function tt() {
            var r = nt(),
            u = g(),
            i = u.realWidth,
            f,
            e;
            f = Math.max(r.top, 0) < 50 ? Math.max(r.top, 0) : Math.max(r.top, 0) - 50;
            t.draggable && n.fn.draggable ? (s.addClass("modal-dialog-reset"), e = (u.windowWidth - s.width()) / 2, u.windowWidth > 768 || a() ? (s.attr({
                style: "width: " + i + "px;"
            }), s.css({
                left: e + "px",
                top: f + "px",
                width: i + "px"
            })) : s.css({
                left: e + "px",
                top: r.navbarHeight + "px",
                width: i + "px"
            })) : u.windowWidth > 768 || a() ? (s.attr({
                style: "width: " + i + "px;"
            }), s.css({
                top: f + "px",
                width: i + "px"
            })) : s.css({
                top: r.navbarHeight + "px",
                width: i + "px"
            });
            c()
        }
        function c() {
            setTimeout(function() {
                var u = n(window).height(),
                i,
                r = f.find(".bootbox-body").height();
                i = f.hasClass("box-full-screen") ? u - 140 : u - 200;
                i > 350 && r > 300 ? s.find(".modal-body").css({
                    "max-height": t.max_height ? t.max_height: i
                }) : (s.find(".bootbox-body").css({
                    "max-height": "auto"
                }), s.find(".bootbox-body").removeAttr("overflow-x"), s.find(".bootbox-body").removeAttr("overflow-y"));
                parseInt(r) < 200 ? f.find(".modal-body").css({
                    "overflow-y": "inherit"
                }) : f.find(".modal-body").css({
                    "overflow-y": "scroll"
                });
                parseInt(r) < 100 && f.find(".modal-body").css({
                    "overflow-x": "inherit"
                })
            },
            700)
        }
        var it, w, rt, k, d, ut;
        delete e.width;
        t = p(t);
        t.opener = n("div.bootbox").size() > 0 ? n("div.bootbox").last() : document.body;
        t.beforeRender.call(this);
        var f = n(r.dialog),
        h = f.find(".modal-body"),
        s = f.find(".modal-dialog"),
        v = f.find(".modal-header"),
        ft = f.find(".bootbox-body"),
        y = f.find(".modal-footer");
        n(f).data("options", t);
        var et = t.buttons,
        b = "",
        l = {
            onEscape: t.onEscape || n.noop,
            onClose: t.onClose || t.onEscape || n.noop
        };
        if (u(et,
        function(n, t) {
            b += "<button id='btn_" + n + "' data-bb-handler='" + n + "' data-loading-text='" + t.label + "' type='button' class='btn btn-sm " + t.className + "'>" + t.label + "<\/button>";
            l[n] = t.callback
        }), t.animate === !0 && f.addClass("fade"), t.width && (it = g(), w = it.realWidth, w && (f.className = f.className || "bootbox-" + w, s.attr({
            style: "width: " + w + "px;"
        }))), t.height && (rt = t.height ? "height": "max-height", k = t.height || this.options.maxHeight, k && f.find(".modal-body").css(rt, k)), t.max_height ? f.find(".modal-body").css("max-height", t.max_height) : c(), t.className ? f.addClass(t.className) : f.addClass("bootbox-dialog"), t.title && h.before(r.header), t.closeButton && (d = n(r.closeButton), t.title ? f.find(".modal-header").prepend(d) : d.css("margin-top", "-10px").prependTo(h)), t.fullScreen) {
            ut = n(r.fullScreen);
            f.find(".modal-header .bootbox-close").after(ut);
            n(document).off("click", ".bootbox-full").on("click", ".bootbox-full",
            function() {
                f.hasClass("box-full-screen") ? (f.removeClass("box-full-screen"), f.find(".modal-header .fa-minus-square-o").addClass("fa-square").removeClass("fa-minus-square-o")) : (f.addClass("box-full-screen"), f.find(".modal-header .fa-square").addClass("fa-minus-square-o").removeClass("fa-square"));
                n(window).trigger("resize");
                c()
            })
        }
        t.modalName && (f.attr("name", t.modalName), f.attr("id", t.modalName));
        t.title && f.find(".modal-title").html(t.title);
        b.length && (h.after(r.footer), f.find(".modal-footer").html(b));
        t.progress && (h.after(r.progress), f.find(".progress-bar").attr("id", t.progressID || "bootboxStatus"));
        f.on("loaded.bs.modal",
        function() {
            n.isFunction(t.onLoaded) && t.onLoaded.call(this, f)
        });
        n.when(n.Deferred(function(n) {
            f.data("def", n);
            t.message ? (h.find(".bootbox-body").html(t.message), n.resolve()) : i.loadBody(f, t, n)
        }).promise()).done(function() {
            c();
            n(f).trigger("loaded.bs.modal")
        });
        f.on("hide.bs.modal",
        function(i) {
            f.off("resize.bs.modal").off("resized.bs.modal");
            n.isFunction(t.onHide) && t.onHide.call(this, i)
        });
        f.on("hidden.bs.modal",
        function(i) {
            i.target === this && f.remove();
            n("div.bootbox").size() == 0 && n(document.body).removeClass("modal-open");
            n.fn.fixed && t.fixedTarget && n(t.fixedTarget).size() == 1 && n(t.fixedTarget).fixed("destroy");
            n.isFunction(t.onHidden) && t.onHidden.call(this, i)
        });
        f.on("resized.bs.modal",
        function(i) {
            tt();
            n.isFunction(t.onResized) && t.onResized.call(this, i)
        });
        f.on("show.bs.modal",
        function(i) {
            t.backdrop && f.next(".modal-backdrop").addClass("bootbox-backdrop");
            n.isFunction(t.onShow) && t.onShow.call(this, i)
        });
        f.on("shown.bs.modal",
        function(i) {
            var r, e, u;
            tt();
            r = n("div.bootbox").size();
            r > 1 && (e = parseInt(f.css("z-index") || "1050"), u = e + (r - 1) * 100, f.css("z-index", u + 100), t.backdrop != !1 && n(document.body).find("div.modal-backdrop").last().css("z-index", u));
            f.find("input[name='focusInput']").focus();
            t.draggable && n.fn.draggable && (s.draggable({
                scroll: !0,
                containment: s.closest(".bootbox"),
                handle: ".modal-header,.modal-footer",
                start: function(n, t) {
                    var i = t.helper.offset().left;
                    t.helper.addClass("modal-dialog-reset")
                },
                drag: function() {},
                stop: function(n, t) {
                    t.helper.offset().top < 0 && s.css({
                        top: "0"
                    });
                    c()
                }
            }), f.find(".modal-header,.modal-footer").css("cursor", "move"));
            t.afterRender.call({
                api: window.api,
                content: self || window,
                document: f.find(".bootbox-body"),
                close: function() {
                    f.modal("hide")
                },
                button: function(t) {
                    if (t && t.id) {
                        var i = n.extend(!0, {},
                        t);
                        delete i.id;
                        f.find(".modal-footer").find("button[data-bb-handler='" + t.id + "']").prop(i)
                    }
                }
            });
            f.removeClass("hide");
            n.isFunction(t.onShown) && t.onShown.call(this, i);
            n(window).trigger("resize");
            c()
        });
        f.on("escape.close.bb",
        function(n) {
            l.onEscape && o(n, f, t, l.onEscape)
        });
        f.on("click", ".modal-footer button",
        function(i) {
            var r = n(this).data("bb-handler");
            o(i, f, t, l[r])
        });
        f.on("click", ".bootbox-close-button",
        function(n) {
            l.onClose && o(n, f, t, l.onClose)
        });
        f.on("keyup",
        function(n) {
            n.which === 27 && f.trigger("escape.close.bb")
        });
        return n(t.container).append(f),
        n.when(f.data("def")).done(function() {
            var i = nt();
            a() && s.css({
                top: Math.max(i.top, 0) + "px"
            });
            f.modal({
                backdrop: t.backdrop,
                keyboard: !0,
                replace: !0,
                show: !1
            });
            f.off("resize.bs.modal");
            t.show && f.modal("show");
            n(window).resize(function(t) {
                var i = s.data("def");
                if (i) return ! 1;
                n.when(n.Deferred(function(n) {
                    s.data("def", n);
                    f.triggerHandler("resized.bs.modal", [t]);
                    window.setTimeout(function() {
                        n.resolve()
                    },
                    500)
                }).promise()).done(function() {
                    s.removeData("def")
                })
            })
        }),
        f
    },
    i.setDefaults = function() {
        var t = {};
        arguments.length === 2 ? t[arguments[0]] = arguments[1] : t = arguments[0];
        n.extend(e, t)
    },
    f = function(t) {
        if (t) {
            var i = t.contentWindow;
            try {
                t.src = "about:blank";
                i.document.write("");
                i.document.close();
                i.document.clear()
            } catch(r) {}
            n(t).remove()
        }
    },
    i.hideModal = function(t) {
        n(".bootbox[name=" + t + "]").find("iframe").each(function(n, t) {
            typeof f == "function" && f(t)
        });
        n(".bootbox[name=" + t + "]").modal("hide")
    },
    i.hideAll = function() {
        n(".bootbox").find("iframe").each(function(n, t) {
            typeof f == "function" && f(t)
        });
        n(".bootbox").modal("hide")
    },
    s = {
        br: {
            OK: "OK",
            CANCEL: "Cancelar",
            CONFIRM: "Sim"
        },
        da: {
            OK: "OK",
            CANCEL: "Annuller",
            CONFIRM: "Accepter"
        },
        de: {
            OK: "OK",
            CANCEL: "Abbrechen",
            CONFIRM: "Akzeptieren"
        },
        en: {
            OK: "OK",
            CANCEL: "Cancel",
            CONFIRM: "OK"
        },
        es: {
            OK: "OK",
            CANCEL: "Cancelar",
            CONFIRM: "Aceptar"
        },
        fi: {
            OK: "OK",
            CANCEL: "Peruuta",
            CONFIRM: "OK"
        },
        fr: {
            OK: "OK",
            CANCEL: "Annuler",
            CONFIRM: "D'accord"
        },
        he: {
            OK: "讗讬砖讜专",
            CANCEL: "讘讬讟讜诇",
            CONFIRM: "讗讬砖讜专"
        },
        it: {
            OK: "OK",
            CANCEL: "Annulla",
            CONFIRM: "Conferma"
        },
        lt: {
            OK: "Gerai",
            CANCEL: "At拧aukti",
            CONFIRM: "Patvirtinti"
        },
        lv: {
            OK: "Labi",
            CANCEL: "Atcelt",
            CONFIRM: "Apstiprin膩t"
        },
        nl: {
            OK: "OK",
            CANCEL: "Annuleren",
            CONFIRM: "Accepteren"
        },
        no: {
            OK: "OK",
            CANCEL: "Avbryt",
            CONFIRM: "OK"
        },
        pl: {
            OK: "OK",
            CANCEL: "Anuluj",
            CONFIRM: "Potwierd藕"
        },
        ru: {
            OK: "OK",
            CANCEL: "袨褌屑械薪邪",
            CONFIRM: "袩褉懈屑械薪懈褌褜"
        },
        sv: {
            OK: "OK",
            CANCEL: "Avbryt",
            CONFIRM: "OK"
        },
        tr: {
            OK: "Tamam",
            CANCEL: "陌ptal",
            CONFIRM: "Onayla"
        },
        zh_CN: {
            OK: "纭�  瀹�",
            CANCEL: "鍙�  娑�",
            CONFIRM: "纭�  璁�"
        },
        zh_TW: {
            OK: "OK",
            CANCEL: "鍙栨秷",
            CONFIRM: "纰鸿獚"
        }
    },
    i.init = function(t) {
        return init(t || n)
    },
    i
}),
function(n) {
    n.extend({
        message: function(t, i, r, u) {
            if (! (n("#statusModal").size() > 0)) return r = r || n.noop,
            u = u || {},
            n.dialog(n.extend(!0, {
                title: t || n.i18n.bootbox.titles.prompt,
                message: i,
                width: u.width || "800px",
                modalName: u.modalName || "msgModal",
                buttons: {
                    cancel: {
                        label: n.i18n.bootbox.buttons.success,
                        className: "btn-default",
                        callback: function() {
                            return n.isFunction(r) ? r.call(this) : !0
                        }
                    }
                }
            },
            u || {}))
        },
        alert: function(t, i, r) {
            if (! (n("#statusModal").size() > 0)) {
                if (t && t.indexOf("timeSettingInfo") > 10) return (r = n.extend(!0, {},
                {
                    width: "700px",
                    modalName: "timeSettingModal"
                },
                r || {}), n("#" + r.modalName).size() > 0) ? void 0 : n.message(n.i18n.bootbox.messages.open_tip, t, i, r);
                var u = n.getTextLength(t || ""),
                f = Math.ceil(u % 50 / 50) + parseInt(u / 50),
                e = 300 + (f > 0 ? (f - 1) * 30 : 0);
                if (r = n.extend(!0, {},
                {
                    width: e + "px",
                    modalName: "alertModal"
                },
                r || {}), !(n("#" + r.modalName).size() > 0)) return bootbox.alert(n.i18n.bootbox.titles.alert, '<div class="alert alert-modal"><p>' + t + "<\/p><\/div>",
                function(t) {
                    return n.isFunction(i) ? i.call(this, t) : !0
                },
                r)
            }
        },
        error: function(t, i, r) {
            if (! (n("#statusModal").size() > 0)) {
                if (t && t.indexOf("timeSettingInfo") > 10) return (r = n.extend(!0, {},
                {
                    width: "700px",
                    modalName: "timeSettingModal"
                },
                r || {}), n("#" + r.modalName).size() > 0) ? void 0 : n.message(n.i18n.bootbox.messages.open_tip, t, i, r);
                var u = n.getTextLength(t || ""),
                f = Math.ceil(u % 50 / 50) + parseInt(u / 50),
                e = 300 + (f > 0 ? (f - 1) * 30 : 0);
                if (r = n.extend(!0, {},
                {
                    width: e + "px",
                    modalName: "errorModal"
                },
                r || {}), !(n("#" + r.modalName).size() > 0)) return bootbox.alert(n.i18n.bootbox.titles.error, '<div class="error error-modal"><p>' + t + "<\/p><\/div>",
                function(t) {
                    return n.isFunction(i) ? i.call(this, t) : !0
                },
                r)
            }
        },
        success: function(t, i, r) {
            if (! (n("#statusModal").size() > 0)) {
                if (t && t.indexOf("timeSettingInfo") > 10) return (r = n.extend(!0, {},
                {
                    width: "700px",
                    modalName: "timeSettingModal"
                },
                r || {}), n("#" + r.modalName).size() > 0) ? void 0 : n.message(n.i18n.bootbox.messages.open_tip, t, i, r);
                var u = n.getTextLength(t || ""),
                f = Math.ceil(u % 50 / 50) + parseInt(u / 50),
                e = 300 + (f > 0 ? (f - 1) * 30 : 0);
                if (r = n.extend(!0, {},
                {
                    width: e + "px",
                    modalName: "successModal"
                },
                r || {}), !(n("#" + r.modalName).size() > 0)) return bootbox.alert(n.i18n.bootbox.titles.success, '<div class="success success-modal"><p>' + t + "<\/p><\/div>",
                function(t) {
                    return n.isFunction(i) ? i.call(this, t) : !0
                },
                r)
            }
        },
        confirm: function(t, i, r) {
            if (! (n("#statusModal").size() > 0)) {
                if (t && t.indexOf("timeSettingInfo") > 10) return (r = n.extend(!0, {},
                {
                    width: "700px",
                    modalName: "timeSettingModal"
                },
                r || {}), n("#" + r.modalName).size() > 0) ? void 0 : n.message(n.i18n.bootbox.messages.open_tip, t, i, r);
                var u = n.getTextLength(t || ""),
                f = Math.ceil(u % 50 / 50) + parseInt(u / 50),
                e = 300 + (f > 0 ? (f - 1) * 30 : 0);
                return r = n.extend(!0, {},
                {
                    width: e + "px",
                    modalName: "confirmModal"
                },
                r || {}),
                n("#" + r.modalName).size() > 0,
                bootbox.confirm(n.i18n.bootbox.titles.confirm, '<div class="alert confirm-modal"><p>' + t + "<\/p><\/div>",
                function(t) {
                    return n.isFunction(i) ? i.call(this, t) : !0
                },
                r)
            }
        },
        prompt: function(t, i) {
            if (! (n("#statusModal").size() > 0)) return (i = n.extend(!0, {},
            {
                width: "300px",
                modalName: "promptModal"
            },
            i || {}), n("#" + i.modalName).size() > 0) ? void 0 : bootbox.prompt(n.i18n.bootbox.titles.prompt,
            function(i) {
                return n.isFunction(t) ? t.call(this, i) : !0
            },
            i)
        },
        showDialog: function(t, i, r) {
            if (! (n("#statusModal").size() > 0)) return r = r || {},
            n.dialog(n.extend({},
            r || {},
            {
                title: i,
                href: t || "",
                data: r.data || {}
            }))
        },
        dialog: function(t) {
            if (! (n("#statusModal").size() > 0)) {
                var r = {
                    title: n.i18n.bootbox.titles.prompt,
                    href: "",
                    data: {},
                    message: "",
                    backdrop: "static",
                    keyboard: !0,
                    offAtOnce: !0,
                    draggable: !0,
                    onLoaded: null,
                    onClose: null,
                    onEscape: null,
                    onHide: null,
                    onHidden: null,
                    onResize: null,
                    onResized: null,
                    onShow: null,
                    onShown: function() {
                        n('[data-toggle*="validation"]').trigger("validation");
                        n('[data-toggle*="fixed"]').trigger("fixed");
                        n('input[type="checkbox"],input[type="radio"]').trigger("iCheck");
                        n.fn.tooltip && n('[data-toggle*="tooltip"]').tooltip({
                            container: "body"
                        });
                        n.fn.fixed && t.fixedTarget && n(t.fixedTarget).size() == 1 && n(t.fixedTarget).fixed({
                            scrollElement: n("#" + t.modalName),
                            container: n("#" + t.modalName).find(".modal-dialog"),
                            z_index: n("#" + t.modalName).css("z-index")
                        })
                    }
                },
                i = n.extend({},
                r, t);
                return n.founded(i.data.ckUrl) && (i.data.ckUrl = encodeURIComponent(i.data.ckUrl || "")),
                n.founded(i.data.shUrl) && (i.data.shUrl = encodeURIComponent(i.data.shUrl || "")),
                bootbox.dialog(i)
            }
        },
        closeModal: function(n) {
            bootbox.hideModal(n)
        },
        closeAllModal: function() {
            bootbox.hideAll()
        }
    });
    n.fn.reloadDialog = function(t) {
        return this.each(function() {
            var i = n(this),
            r = n(i).data("options");
            r && n(i).hasClass("bootbox") && n.when(n.Deferred(function(u) {
                i.data("def", u);
                r.message ? (i.find(".bootbox-body").html(r.message), u.resolve()) : bootbox.loadBody(i, n.extend(r, t || {}), u)
            }).promise()).done(function() {
                n(i).trigger("loaded.bs.modal")
            })
        })
    };
    n.exportDialog = function(t, i, r, u, f, e) {
        var v, h, o, c, s, l, a, y;
        if (! (n("#statusModal").size() > 0)) {
            if (!n.founded(i)) throw new Error("dcclbh 涓嶈兘涓虹┖ !");
            if (v = _path + "/zftal/drdc/export_exportInitDcpz.html", h = {
                dcclbh: i
            },
            u && u.length > 0) for (o = 0, c = 0; c < u.length; c++) s = u[c],
            n.trim(s.label).length > 0 && n.trim(s.index).length > 0 && s.hidden != !0 && (h["colConfig[" + o + "].zd"] = s.name, h["colConfig[" + o + "].zdmc"] = s.label, h["colConfig[" + o + "].xssx"] = o, o++);
            jQuery.ajaxSetup({
                async: !1
            });
            n.post(v, h);
            jQuery.ajaxSetup({
                async: !0
            });
            r = r || {};
            r.dcclbh = i;
            n.founded(f) && n(f).size() > 0 && (l = n(f).jqGrid("getGridParam", "sortname"), a = n(f).jqGrid("getGridParam", "sortorder"), n.defined(l) && (r["queryModel.sortName"] = l), n.defined(a) && (r["queryModel.sortOrder"] = a));
            y = n.buildForm("drdcForm", t, r);
            n.dialog({
                title: n.i18n.bootbox.titles["export"],
                href: _path + "/zftal/drdc/export_exportConfig.html",
                data: {
                    dcclbh: i
                },
                width: "900px",
                modalName: "ExportModal",
                buttons: {
                    bcdc: {
                        label: n.i18n.bootbox.buttons["export"],
                        className: "btn-primary",
                        callback: function() {
                            var t = this.content.saveConfig(y, e);
                            return n.defined(t) ? t: !0
                        }
                    },
                    cancel: {
                        label: n.i18n.bootbox.buttons.cancel,
                        className: "btn-default"
                    }
                }
            })
        }
    };
    n.showSortDialog = function(t, i, r) {
        if (! (n("#statusModal").size() > 0)) {
            if (!n.founded(t)) throw new Error("涓氬姟鏁版嵁ID涓嶈兘涓虹┖ !");
            if (!n.founded(i)) throw new Error("鍔熻兘妯″潡浠ｇ爜涓嶈兘涓虹┖ !");
            r = n.defined(r) && jQuery.isFunction(r) ? r: n.noop;
            var u = {
                ywsj_id: t,
                gnmkdm: i
            };
            n.dialog({
                title: n.i18n.bootbox.titles.showSort,
                href: _path + "/xtgl/ywsjPxxx_cxYwsjPxxx.html",
                data: u,
                width: "500px",
                modalName: "sortModal",
                buttons: {
                    success: {
                        label: n.i18n.bootbox.buttons.success,
                        className: "btn-primary",
                        callback: function() {
                            var t = [];
                            return n("#sort_table_body").find("tr.sort-item").each(function(i, r) {
                                var f = n(r).data("order");
                                t.push({
                                    yxj: i + 1,
                                    pxfs: n.founded(f) ? f: "asc",
                                    zdmc: n(r).data("sort")
                                });
                                u["list[" + i + "].yxj"] = i + 1;
                                u["list[" + i + "].pxfs"] = t[i].pxfs;
                                u["list[" + i + "].zdmc"] = t[i].zdmc
                            }),
                            n.ajaxSetup({
                                async: !1
                            }),
                            n.post(_path + "/xtgl/ywsjPxxx_cxYwsjPxxxForUpdate.html", u,
                            function() {
                                n.closeModal("sortModal");
                                r.call(this, t)
                            }),
                            n.ajaxSetup({
                                async: !0
                            }),
                            !1
                        }
                    },
                    cancel: {
                        label: n.i18n.bootbox.buttons.cancel,
                        className: "btn-default"
                    }
                }
            })
        }
    };
    n.fullAvatarDialog = function(t, i, r) {
        n("#statusModal").size() > 0 || (i.upload_url = encodeURIComponent(i.upload_url || ""), i.src_url = encodeURIComponent(i.src_url || ""), n.dialog({
            title: t || n.i18n.bootbox.titles.fullAvatar,
            draggable: !1,
            href: _path + "/editor/fullAvatar_cxFullAvatarUpload.html",
            data: i || {},
            width: "700px",
            modalName: "FullAvatarUpload",
            onHidden: function() {
                n.isFunction(r) && r.call(this)
            },
            buttons: {
                success: {
                    label: n.i18n.bootbox.buttons.upload,
                    className: "btn-primary",
                    callback: function() {
                        return swf_object && swf_object.call("upload"),
                        !1
                    }
                },
                reelect: {
                    label: n.i18n.bootbox.buttons.choice,
                    className: "btn-primary",
                    callback: function() {
                        return swf_object && swf_object.call("changepanel", "upload"),
                        !1
                    }
                },
                cancel: {
                    label: n.i18n.bootbox.buttons.cancel,
                    className: "btn-default",
                    callback: function() {}
                }
            }
        }))
    };
    n.fullAvatarURLDialog = function(t, i, r, u, f) {
        if (! (n("#statusModal").size() > 0)) {
            if (!n.founded(t)) throw new Error("paramURL 涓嶈兘涓虹┖ !");
            n.post(t, r,
            function(t) {
                n.fullAvatarDialog(i, n.extend({},
                u || {},
                t || {}), f)
            })
        }
    };
    n.reportDialog = function(t, i) {
        if (! (n("#statusModal").size() > 0)) {
            if (t = t || {},
            !n.founded(t.reportID)) throw new Error("reportID 涓嶈兘涓虹┖ !");
            var r = n.extend(!0, {},
            t, {
                reportID: encodeURIComponent(t.reportID || ""),
                viewType: "dialog",
                searchType: t.searchType || "",
                gnmkdm: t.gnmkdm || n("#gnmkdmKey").val()
            });
            n.dialog({
                title: t.title || n.i18n.bootbox.titles.report,
                href: _path + "/report/report_cxReportIndex.html",
                data: r,
                width: t.width || n("#yhgnPage").innerWidth() + "px",
                modalName: "ReportModal",
                onHidden: function() {
                    n.isFunction(i) && i.call(this)
                },
                buttons: {
                    cancel: {
                        label: n.i18n.bootbox.buttons.cancel,
                        className: "btn-default"
                    }
                }
            })
        }
    };
    n.batchModifyDialog = function(t, i) {
        if (! (n("#statusModal").size() > 0)) {
            t = t || {};
            var r = n.extend(!0, {},
            t, {
                gnmkdm: t.gnmkdm || n("#gnmkdmKey").val()
            });
            if (!n.founded(r.gnmkdm)) throw new Error("gnmkdm 涓嶈兘涓虹┖ !");
            if (!n.founded(r.plxgURL)) throw new Error("plxgURL 涓嶈兘涓虹┖[璇ヨ矾寰勪负鏈€缁堟墽琛屾壒閲忎慨鏀规搷浣滅殑璇锋眰璺緞] !");
            n.dialog(n.extend({},
            addConfig, {
                title: t.title || n.i18n.bootbox.titles.batchModify,
                href: _path + "/xtgl/plxg_cxPlxgSettings.html",
                data: r,
                width: t.width || "600px",
                modalName: "ReportModal",
                onHidden: function() {
                    n.isFunction(i) && i.call(this)
                }
            }))
        }
    };
    n.fn.clearElements = function() {
        return this.each(function() {
            if (n(this).is("input,select,textarea")) n(this).clearFields(),
            n(this).trigger("chosen:updated"),
            n(this).trigger("kineditor:sync");
            else {
                var t = n(this).find("input,select,textarea").filter(function() {
                    return ! n(this).hasClass("ignore")
                }),
                i = n(t).filter('[data-clear="true"]');
                i.size() > 0 ? (n(i).clearFields(), n(i).trigger("chosen:updated"), n(i).trigger("kineditor:sync")) : (n(t).clearFields(), n(t).trigger("chosen:updated"), n(t).trigger("kineditor:sync"))
            }
        })
    }
} (jQuery);
var viewConfig = {
    width: "500px",
    modalName: "viewModal",
    offAtOnce: !0,
    buttons: {
        cancel: {
            label: "鍏� 闂�",
            className: "btn-default",
            callback: function() {}
        }
    }
},
addConfig = {
    width: "900px",
    modalName: "addModal",
    formName: "ajaxForm",
    gridName: "tabGrid",
    offAtOnce: !1,
    buttons: {
        success: {
            label: "纭� 瀹�",
            className: "btn-primary",
            callback: function() {
                var t = this,
                n = t.options || {};
                return submitForm(n.formName || "ajaxForm",
                function(i) {
                    t.reset();
                    $.type(i) === "string" ? i.indexOf("鎴愬姛") > -1 ? $.success(i,
                    function() {
                        n.offAtOnce && $.closeModal(n.modalName);
                        $(t.document).clearElements();
                        var i = $("#" + n.gridName || "tabGrid");
                        $(i).size() > 0 && $(i).reloadGrid()
                    }) : i.indexOf("澶辫触") > -1 ? $.error(i,
                    function() {}) : $.alert(i,
                    function() {}) : $.isPlainObject(i) && (i.status == "success" ? $.success(i.message,
                    function() {
                        n.offAtOnce && $.closeModal(n.modalName);
                        $(t.document).clearElements();
                        var i = $("#" + n.gridName || "tabGrid");
                        $(i).size() > 0 && $(i).reloadGrid()
                    }) : i.status == "error" ? $.error(i.message) : $.alert(i.message))
                }),
                !1
            }
        },
        cancel: {
            label: "鍏� 闂�",
            className: "btn-default"
        }
    }
},
modifyConfig = {
    width: "900px",
    modalName: "modifyModal",
    formName: "ajaxForm",
    gridName: "tabGrid",
    offAtOnce: !0,
    buttons: {
        success: {
            label: "纭� 瀹�",
            className: "btn-primary",
            callback: function() {
                var t = this,
                n = t.options || {};
                return submitForm(n.formName || "ajaxForm",
                function(i) {
                    t.reset();
                    $.type(i) === "string" ? i.indexOf("鎴愬姛") > -1 ? $.success(i,
                    function() {
                        n.offAtOnce && $.closeModal(n.modalName || "modifyModal");
                        var t = $("#" + n.gridName || "tabGrid");
                        $(t).size() > 0 && $(t).reloadGrid()
                    }) : i.indexOf("澶辫触") > -1 ? $.error(i,
                    function() {}) : $.alert(i,
                    function() {}) : $.isPlainObject(i) && (i.status == "success" ? $.success(i.message,
                    function() {
                        n.offAtOnce && $.closeModal(n.modalName || "modifyModal");
                        var t = $("#" + n.gridName || "tabGrid");
                        $(t).size() > 0 && $(t).reloadGrid()
                    }) : i.status == "error" ? $.error(i.message) : $.alert(i.message))
                }),
                !1
            }
        },
        cancel: {
            label: "鍏� 闂�",
            className: "btn-default"
        }
    }
},
shConfig = {
    width: "900px",
    modalName: "shModal",
    fixedTarget: "#fixtop",
    buttons: {}
}; (function() {
    bootbox.setDefaults({
        show: !0,
        progress: !1,
        btnlock: !1,
        backdrop: !1,
        draggable: !1,
        closeButton: !0,
        animate: !1,
        className: "my-modal"
    })
})(jQuery),
function(n) {
    n.i18n = n.i18n || {};
    n.i18n.bootbox = n.i18n.bootbox || {};
    n.extend(n.i18n.bootbox, {
        buttons: {
            success: "纭� 瀹�",
            cancel: "鍏� 闂�",
            "export": "瀵煎嚭",
            upload: "涓� 浼�",
            choice: "閫� 鎷�"
        },
        titles: {
            success: "鎴愬姛鎻愮ず",
            alert: "璀﹀憡鎻愮ず",
            error: "閿欒鎻愮ず",
            confirm: "纭鎻愮ず",
            prompt: "淇℃伅鎻愮ず",
            "export": "鑷畾涔夊鍑�",
            report: "鎶ヨ〃棰勮",
            batchModify: "鎵归噺淇敼鏁版嵁",
            fullAvatar: "瀵屽ご鍍忎笂浼�",
            showSort: "鎺掑簭浼樺厛绾ц缃�"
        },
        messages: {
            open_tip: "鍔熻兘鏃堕棿寮€鏀炬彁绀�"
        }
    });
    bootbox.setDefaults({
        locale: "zh_CN"
    });
    n.extend(!0, viewConfig || {},
    {
        buttons: {
            cancel: {
                label: n.i18n.bootbox.buttons.cancel
            }
        }
    });
    n.extend(!0, addConfig || {},
    {
        buttons: {
            success: {
                label: n.i18n.bootbox.buttons.success
            },
            cancel: {
                label: n.i18n.bootbox.buttons.cancel
            }
        }
    });
    n.extend(!0, modifyConfig || {},
    {
        buttons: {
            success: {
                label: n.i18n.bootbox.buttons.success
            },
            cancel: {
                label: n.i18n.bootbox.buttons.cancel
            }
        }
    })
} (jQuery);